1. Use a heuristic for cross-over (maybe std::max(manh + DstToGoal))

3. Fix natural selection algorithm. Prefer nodes that are sparse than tightly packed ones.

4. Make a good mt implementation.

7. Change explored in Planner to work on a block level (not pixel level)

8. Variable plan sizes. This should handle in theory lucky mutations pretty well.

9. Do not necessarily prune dead players. Change fitness function (?)

10. Pruning is inefficient

---------------------------------------------------------------------------------------
Outstanding:

- Save solutions more elegantly
- remove dst struct field from PlayerInfo. precompute fitness instead

6. Vary pruning parameter depending on the occasion (similar to 3).

11. Decaying boost (not outright removing it)

12. Algorithm favoures kiling players (in most circumstances). Does this make sense?

13. Create award function (avoid copy-pasting in GenChildren and NextGen)
